import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import {
  ClerkProvider,
} from "@clerk/nextjs";
import { arSA } from "@clerk/localizations";
import ConditionalNavBar from "../components/ConditionalNavBar";
import Script from "next/script";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const PLACE_API = process.env.GOOGLE_PLACES_API;

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await params;
  
  // Load messages for the client provider
  const messages = (await import(`../../messages/${locale}.json`)).default;

  return (
    <html lang={locale} dir={locale === 'ar' ? 'rtl' : 'ltr'}>
      <head>
        <Script
          src={`https://maps.googleapis.com/maps/api/js?key=${PLACE_API}&libraries=places`}
          strategy="beforeInteractive"
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased h-full ${locale === 'ar' ? 'rtl' : 'ltr'}`}
      >
        <ClerkProvider localization={locale === 'ar' ? arSA : undefined}>
          <NextIntlClientProvider messages={messages} locale={locale}>
            <div className="flex flex-col h-full">
              <ConditionalNavBar />
              <main className="flex-1 pb-20 md:pb-0">{children}</main>
            </div>
          </NextIntlClientProvider>
        </ClerkProvider>
      </body>
    </html>
  );
}
